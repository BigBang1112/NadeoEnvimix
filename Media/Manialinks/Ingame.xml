<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<manialink version="3">
<frame id="GhostState">
<frame pos="-150 80">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 70">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 60">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 50">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 40">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 30">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 20">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 10">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
<frame pos="-150 0">
<label z-index="0" size="30 5" text="CanyonCar" textfont="RajdhaniMono" textemboss="1" id="Car"/>
<label pos="45 0" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="Time"/>
<label pos="45 -5" z-index="0" size="20 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="State"/>
</frame>
</frame>

<label pos="154 75" z-index="0" size="80 10" text="Random map name" halign="right" textfont="RajdhaniMono" textsize="4" valign="bottom" id="LabelMapName" textemboss="1" hidden="1"/>
<label pos="133 74.25" z-index="0" size="40 10" text="Stadium" halign="right" textfont="RajdhaniMono" textsize="6" valign="bottom" id="LabelEnvironment" textemboss="1"/>
<label pos="155 85" z-index="0" size="20 10" text="A01" halign="right" textsize="10" id="LabelMap" textemboss="1" textfont="RajdhaniMono"/>
<label pos="154 74" z-index="0" size="30 5" text="ValleyCar" textfont="RajdhaniMono" halign="right" id="LabelCar" textemboss="1"/>
<label pos="154 64" z-index="0" size="20 5" text="-:--.---" textfont="RajdhaniMono" textemboss="1" halign="right" id="MyTime" valign="center2"/>
<label pos="154 60" z-index="0" size="10 5" text="CP1" textfont="RajdhaniMono" textemboss="1" halign="right" textsize="1" id="MyState" valign="center2"/>

<label pos="0 35" z-index="0" size="40 6" text="-:--.---" halign="center" textfont="RajdhaniMono" textsize="2" valign="center2" textemboss="1" id="Label_CP_Lap" hidden="1"/>
<label pos="0 30" z-index="0" size="40 6" text="-:--.---" halign="center" textfont="RajdhaniMono" textsize="4" valign="center2" textemboss="1" id="Label_CP_Time" hidden="1"/>
<label pos="0 25" z-index="0" size="40 6" text="+-:--.---" halign="center" textfont="RajdhaniMono" textsize="2" valign="center2" textemboss="1" id="Label_CP_Difference" hidden="1"/>

<script>
	<!--
		#Include "TextLib" as TextLib
		#Include "MathLib" as MathLib
		#Include "AnimLib" as AnimLib
	
		Boolean IsCampaignMap(Text _MapUid) {
			foreach(Campaign,DataFileMgr.Campaigns) {
				foreach(MapGroup,Campaign.MapGroups) {
					foreach(MapInfo,MapGroup.MapInfos) {
						if(MapInfo.MapUid == _MapUid) {
							return True;
						}
					}
				}
			}
			
			return False;
		}
		
		main() {	
			declare SoundHover = Audio.CreateSound("file://Media/Sounds/Hover.ogg");
			declare SoundClick = Audio.CreateSound("file://Media/Sounds/Click.ogg");
			declare SoundElectric = Audio.CreateSound("file://Media/Sounds/Electric.ogg");
			declare SoundElectricShort = Audio.CreateSound("file://Media/Sounds/ElectricShort.ogg");

			declare CP_Cross_Time = -1;
			
			declare Frame <=> (Page.GetFirstChild("GhostState") as CMlFrame);
			
			foreach(FrameCar,Frame.Controls) FrameCar.Hide();
			
			declare Integer[] CheckpointCounters;
			declare Integer MyCheckpointCounter;
			declare Integer LastStart;
			declare Integer CounterWaypoint;
			
			declare netread Integer Net_NEM_Start for UI;
			declare netread Text[] Net_NEM_GhostCars for UI;
			declare netread Integer[] Net_NEM_GhostTimes for UI;
			declare netread Integer[][] Net_NEM_GhostCheckpoints for UI;
			
			declare netwrite Boolean Net_NEM_Validate for UI;
			Net_NEM_Validate = False;
			
			declare netread Text Net_Map for UI;
			declare netread Text Net_Environment for UI;
			if(IsCampaignMap(Map.MapInfo.MapUid)) {
				(Page.GetFirstChild("LabelEnvironment") as CMlLabel).SetText(Net_Environment);
				(Page.GetFirstChild("LabelMap") as CMlLabel).SetText(Net_Map);
			}
			else {
				Page.GetFirstChild("LabelEnvironment").Hide();
				Page.GetFirstChild("LabelMap").Hide();
				Page.GetFirstChild("LabelMapName").Show();
				(Page.GetFirstChild("LabelMapName") as CMlLabel).SetText(Map.MapInfo.Name);
			}
			
			declare netread Text Net_NEM_Car for UI;
			(Page.GetFirstChild("LabelCar") as CMlLabel).SetText(Net_NEM_Car);

			while(True) {
				//declare persistent Integer PERSISTENT_NEM_TOKEN_TIME for LocalUser;
				//log("Token skončí za " ^ (PERSISTENT_NEM_TOKEN_TIME - CurrentTime)/1000 ^ " sekund");
			
				if(Net_NEM_Start != LastStart) {
					LastStart = Net_NEM_Start;
					
					MyCheckpointCounter = 0;
					CounterWaypoint = 0;
					(Page.GetFirstChild("MyTime") as CMlLabel).SetText("-:--.---");
					Page.GetFirstChild("MyState").Hide();
					
					CheckpointCounters.clear();
					
					for(i,0,Net_NEM_GhostCars.count - 1) {
						((Frame.Controls[i] as CMlFrame).GetFirstChild("Car") as CMlLabel).SetText(Net_NEM_GhostCars[i]);
						Frame.Controls[i].Show();
						
						CheckpointCounters.add(0);
					}
					
					declare netwrite Boolean Net_NEM_Continue for UI;
					Net_NEM_Continue = False;
				}
			
				for(i,0,Net_NEM_GhostCars.count - 1) {
					if(CheckpointCounters[i] < Net_NEM_GhostCheckpoints[i].count && Net_NEM_Start + Net_NEM_GhostCheckpoints[i][CheckpointCounters[i]] < GameTime) {
						CheckpointCounters[i]+=1;
					}
					
					if(CheckpointCounters[i] > 0) {
						declare Tim = Net_NEM_GhostCheckpoints[i][CheckpointCounters[i]-1];
						((Frame.Controls[i] as CMlFrame).GetFirstChild("Time") as CMlLabel).SetText(TextLib::TimeToText(Tim,True)^TextLib::SubText(""^Tim,TextLib::Length(""^Tim)-1,1));
					}
				
					if(CheckpointCounters[i] == Net_NEM_GhostCheckpoints[i].count) {
						(Frame.Controls[i] as CMlFrame).GetFirstChild("State").Show();
						((Frame.Controls[i] as CMlFrame).GetFirstChild("State") as CMlLabel).SetText("FINISH");
						((Frame.Controls[i] as CMlFrame).GetFirstChild("State") as CMlLabel).TextColor = <1.0,0.25,0.25>;
					}
					else if(CheckpointCounters[i] == 0) {
						((Frame.Controls[i] as CMlFrame).GetFirstChild("Time") as CMlLabel).SetText("-:--.---");
						(Frame.Controls[i] as CMlFrame).GetFirstChild("State").Hide();
					}
					else {
						(Frame.Controls[i] as CMlFrame).GetFirstChild("State").Show();
						((Frame.Controls[i] as CMlFrame).GetFirstChild("State") as CMlLabel).SetText("CP"^(CheckpointCounters[i]));
						((Frame.Controls[i] as CMlFrame).GetFirstChild("State") as CMlLabel).TextColor = <0.5,0.75,1.0>;
					}
				}

				if(CP_Cross_Time != -1 && CP_Cross_Time + 2000 < Now) {
					Page.GetFirstChild("Label_CP_Time").Hide();
					Page.GetFirstChild("Label_CP_Lap").Hide();
					Page.GetFirstChild("Label_CP_Difference").Hide();
					CP_Cross_Time = -1;
				}
			
				foreach(Event,RaceEvents) {
					switch(Event.Type) {
						case CTmRaceClientEvent::EType::WayPoint: {
							if(Event.IsEndRace) {
								(Page.GetFirstChild("MyTime") as CMlLabel).SetText(TextLib::TimeToText(Event.RaceTime,True)^TextLib::SubText(""^Event.RaceTime,TextLib::Length(""^Event.RaceTime)-1,1));
								(Page.GetFirstChild("MyState") as CMlLabel).SetText("FIN");
								(Page.GetFirstChild("MyState") as CMlLabel).TextColor = <1.0,0.25,0.25>;
							}
							else if(Event.IsEndLap) {
								(Page.GetFirstChild("MyTime") as CMlLabel).SetText(TextLib::TimeToText(Event.RaceTime,True)^TextLib::SubText(""^Event.RaceTime,TextLib::Length(""^Event.RaceTime)-1,1));
								(Page.GetFirstChild("MyState") as CMlLabel).SetText("LAP");
								(Page.GetFirstChild("MyState") as CMlLabel).TextColor = <1.0,0.75,0.0>;
							}
							else {
								MyCheckpointCounter+=1;
								(Page.GetFirstChild("MyTime") as CMlLabel).SetText(TextLib::TimeToText(Event.RaceTime,True)^TextLib::SubText(""^Event.RaceTime,TextLib::Length(""^Event.RaceTime)-1,1));
								(Page.GetFirstChild("MyState") as CMlLabel).SetText("CP"^MyCheckpointCounter);
								(Page.GetFirstChild("MyState") as CMlLabel).TextColor = <0.5,0.75,1.0>;
								Page.GetFirstChild("MyState").Show();
							}

							(Page.GetFirstChild("Label_CP_Time") as CMlLabel).SetText(TextLib::TimeToText(Event.RaceTime,True)^TextLib::SubText(""^Event.RaceTime,TextLib::Length(""^Event.RaceTime)-1,1));
							Page.GetFirstChild("Label_CP_Time").Show();

							if(Event.RaceTime != Event.LapTime) {
								(Page.GetFirstChild("Label_CP_Lap") as CMlLabel).SetText("$ff0"^TextLib::TimeToText(Event.LapTime,True)^TextLib::SubText(""^Event.LapTime,TextLib::Length(""^Event.LapTime)-1,1));
								Page.GetFirstChild("Label_CP_Lap").Show();
							}

							if(Event.Player.Score.BestRace.Checkpoints.count > 0 && Event.Player.Score.BestRace.Checkpoints.existskey(CounterWaypoint)) {
								declare Text DifferencePrefix;
								declare Integer Difference;
								if(Event.IsEndRace)
									Difference = Event.RaceTime - Event.Player.Score.BestRace.Time;
								else
									Difference = Event.RaceTime - Event.Player.Score.BestRace.Checkpoints[CounterWaypoint];
								
								if(Difference > 0)
									DifferencePrefix = "$f00+";
								else if(Difference < 0)
									DifferencePrefix = "$00f";
								else
									DifferencePrefix = "$f0f";

								(Page.GetFirstChild("Label_CP_Difference") as CMlLabel).SetText(DifferencePrefix^TextLib::TimeToText(Difference,True)^TextLib::SubText(""^Difference,TextLib::Length(""^Difference)-1,1));
								Page.GetFirstChild("Label_CP_Difference").Show();
							}
							CounterWaypoint+=1;
							CP_Cross_Time = Now;

							Audio.PlaySoundEvent(SoundElectricShort, 1.0);
						}
					}
				}
				
				foreach(Event,PendingEvents) {
					switch(Event.Type) {
						case CMlEvent::Type::MouseOver: {
							declare Frame <=> Event.Control.Parent;
						
							if(Event.ControlId == "button") {
								Audio.PlaySoundEvent(SoundHover, 1.0);
								Frame.DataAttributeSet("hover","true");
								Frame.DataAttributeSet("hover_time",Now^"");
								Frame.DataAttributeSet("hover_in_value",(Event.Control as CMlQuad).BgColor[0]^"");
							}
						}
						case CMlEvent::Type::MouseOut: {
							declare Frame <=> Event.Control.Parent;
						
							if(Event.ControlId == "button") {
								Frame.DataAttributeSet("hover","false");
								Frame.DataAttributeSet("hover_time",Now^"");
								Frame.DataAttributeSet("hover_out_value",(Event.Control as CMlQuad).BgColor[0]^"");
							}
						}
						case CMlScriptEvent::Type::MouseClick: {
							if(Event.ControlId == "button") {
								declare netwrite Text Net_State for UI;
								Net_State = "MENU";
							}
						}
					}
				}
				
				yield;
			}
		}
	-->
</script>
</manialink>